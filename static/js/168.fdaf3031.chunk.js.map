{"version":3,"file":"static/js/168.fdaf3031.chunk.js","mappings":"sKACA,MAAyB,uB,SCUzB,MATA,WACE,OACE,iBAAKA,UAAWC,EAAhB,WACE,qBACA,qBACA,yB,6KCNN,K,kBCKe,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAaR,GAASS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5BN,EAAWM,GACXJ,GAAW,QAEZ,CAACN,KAGF,gCACGK,IAAW,SAACM,EAAA,EAAD,IACXR,GAAWA,EAAQS,OAAS,GAC3B,wBACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAZ,OACX,gBAAIlB,UAAWC,EAAAA,KAAf,WACE,qCACA,uBAAIgB,MAFsBC,SAOhC,yE,oLChCFC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAgBC,GAC9B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,iCACoCa,IAI5D,SAASC,EAAsB/B,GACpC,OAAOkB,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBhB,EAAtB,oBAAyCiB,IAGjE,SAASe,EAAchC,GAC5B,OAAOkB,EAAuB,GAAD,OACxBF,EADwB,kBACNhB,EADM,4BACqBiB,IAI7C,SAAST,EAAaR,GAC3B,OAAOkB,EAAuB,GAAD,OACxBF,EADwB,iBACPhB,EADO,4BACoBiB","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__jYjgr\",\"bouncingLoader\":\"Loader_bouncingLoader__+XNsm\"};","import s from \"./Loader.module.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={s.loader}>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchReviews } from \"../../services/API\";\r\nimport s from \"./Reviews.module.css\";\r\nimport Loader from \"../Loader\";\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchReviews(movieId).then(({ results }) => {\r\n      setReviews(results);\r\n      setLoading(false);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {reviews && reviews.length > 0 ? (\r\n        <ul>\r\n          {reviews.map(({ content, id }) => (\r\n            <li className={s.item} key={id}>\r\n              <h2>Content</h2>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>We don't have any Reviews for this movie</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst KEY = \"dcf3bb54120e2f9c59dbcbb87469478c\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchHomePage() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}trending/movies/day?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMoviesPage(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${name}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetailsPage(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\r\n}\r\n\r\nexport function FetchFilmCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\r\n  );\r\n}\r\n"],"names":["className","s","Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchReviews","then","results","Loader","length","map","content","id","BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchHomePage","fetchMoviesPage","name","fetchMovieDetailsPage","FetchFilmCast"],"sourceRoot":""}