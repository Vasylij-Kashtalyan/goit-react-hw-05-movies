{"version":3,"file":"static/js/973.7235bdb3.chunk.js","mappings":"sKACA,MAAyB,uB,SCUzB,MATA,WACE,OACE,iBAAKA,UAAWC,EAAhB,WACE,qBACA,qBACA,yB,oLCPAC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAgBC,GAC9B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,iCACoCa,IAI5D,SAASC,EAAsBC,GACpC,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBgB,EAAtB,oBAAyCf,IAGjE,SAASgB,EAAcD,GAC5B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,IAI7C,SAASiB,EAAaF,GAC3B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,iBACPgB,EADO,4BACoBf,M,2HCjCnD,GAAgB,KAAO,uBAAuB,KAAO,wB,SCKtC,SAASkB,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAWjB,OATAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXd,EAAAA,EAAAA,MAAgBkB,MAAK,YAAkB,IAAfT,EAAc,EAAdA,QACtBC,EAAWD,GACXK,GAAW,MAEbF,EAASD,KACR,KAGD,gCACGE,IAAW,SAACM,EAAA,EAAD,KACZ,4CACA,eAAIjC,UAAWC,EAAAA,KAAf,SACGsB,EAAQW,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC/B,OACE,gBAAarC,UAAWC,EAAAA,KAAxB,WACE,SAAC,KAAD,CAAMqC,MAAO,CAAEC,KAAMV,GAAYW,GAAE,iBAAYL,GAA/C,UACE,gBACEnC,UAAWC,EAAAA,UACXwC,IAAG,yCAAoCL,GACvCM,IAAKL,OAGT,gBAAKrC,UAAWC,EAAAA,kBAAhB,UACE,eAAID,UAAWC,EAAAA,WAAf,SAA8BoC,QATzBF","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","services/API.js","webpack://goit-react-hw-05-movies/./src/views/HomePage/HomePage.module.css?a66d","views/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__jYjgr\",\"bouncingLoader\":\"Loader_bouncingLoader__+XNsm\"};","import s from \"./Loader.module.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={s.loader}>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;\r\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst KEY = \"dcf3bb54120e2f9c59dbcbb87469478c\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchHomePage() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}trending/movies/day?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMoviesPage(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${name}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetailsPage(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\r\n}\r\n\r\nexport function FetchFilmCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"HomePage_home__X-RpH\",\"card\":\"HomePage_card__3T6-k\"};","import { useState, useEffect } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { fetchHomePage } from \"../../services/API.js\";\r\nimport Loader from \"../../components/Loader/Loader.jsx\";\r\nimport s from \"./HomePage.module.css\";\r\n\r\nexport default function HomePage() {\r\n  const [results, setResults] = useState([]);\r\n  const [error, setError] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchHomePage().then(({ results }) => {\r\n      setResults(results);\r\n      setLoading(false);\r\n    });\r\n    setError(error);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <h1>Trending today</h1>\r\n      <ul className={s.home}>\r\n        {results.map(({ id, poster_path, title }) => {\r\n          return (\r\n            <li key={id} className={s.card}>\r\n              <Link state={{ from: location }} to={`movies/${id}`}>\r\n                <img\r\n                  className={s.card__img}\r\n                  src={`https://image.tmdb.org/t/p/w300${poster_path}`}\r\n                  alt={title}\r\n                />\r\n              </Link>\r\n              <div className={s.card__information}>\r\n                <h2 className={s.card__name}>{title}</h2>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"names":["className","s","BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchHomePage","fetchMoviesPage","name","fetchMovieDetailsPage","movieId","FetchFilmCast","fetchReviews","HomePage","useState","results","setResults","error","setError","loading","setLoading","location","useLocation","useEffect","then","Loader","map","id","poster_path","title","state","from","to","src","alt"],"sourceRoot":""}