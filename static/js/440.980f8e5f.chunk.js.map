{"version":3,"file":"static/js/440.980f8e5f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetailsPage_wrapper__WZrq1\",\"picture\":\"MovieDetailsPage_picture__1EZkg\",\"title\":\"MovieDetailsPage_title__Eofgb\",\"list\":\"MovieDetailsPage_list__Q6fI+\",\"item\":\"MovieDetailsPage_item__TnEQX\",\"link\":\"MovieDetailsPage_link__kQ+xX\"};","import s from \"./MovieDetailsPage.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchMovieDetailsPage } from \"../../services/API\";\r\nimport {\r\n  Link,\r\n  useParams,\r\n  useLocation,\r\n  Outlet,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const [filmInfo, setFilmInfo] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetailsPage(movieId).then((film) => {\r\n      setFilmInfo(film);\r\n    });\r\n  }, [movieId]);\r\n\r\n  const goBack = () => {\r\n    if (location?.state?.from) {\r\n      const { pathname, search } = location?.state?.from;\r\n      return navigate(`${pathname}${search}`);\r\n    }\r\n    return navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {filmInfo && (\r\n        <>\r\n          <button onClick={goBack} className={s.btn}>\r\n            Go Back\r\n          </button>\r\n          <div className={s.wrapper}>\r\n            <img\r\n              className={s.picture}\r\n              src={`https://image.tmdb.org/t/p/original${filmInfo.poster_path}`}\r\n              alt=\"\"\r\n            />\r\n            <ul>\r\n              <h2 className={s.title}>{`${filmInfo.title}`}</h2>\r\n              <li className={s.item}>\r\n                <h3>Vote / Votes</h3>\r\n                <p>{filmInfo.vote_average}</p>\r\n              </li>\r\n              <li className={s.item}>\r\n                <h3>Release date</h3>\r\n                <p>{filmInfo.release_date}</p>\r\n              </li>\r\n              <li className={s.item}>\r\n                <h3>About</h3>\r\n                <p>{filmInfo.overview}</p>\r\n              </li>\r\n              <li className={s.item}>\r\n                <h3>Genre</h3>\r\n                <p>{filmInfo.genres.map(({ name }) => name).join(\", \")}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n      <ul className={s.list}>\r\n        <li className={s.item}>\r\n          <Link\r\n            className={s.link}\r\n            to=\"cast\"\r\n            state={{ from: location?.state?.from }}\r\n          >\r\n            Cast\r\n          </Link>\r\n        </li>\r\n        <li className={s.item}>\r\n          <Link\r\n            className={s.link}\r\n            to=\"reviews\"\r\n            state={{ from: location?.state?.from }}\r\n          >\r\n            Reviews\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst KEY = \"dcf3bb54120e2f9c59dbcbb87469478c\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchHomePage() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}trending/movies/day?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMoviesPage(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${name}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetailsPage(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\r\n}\r\n\r\nexport function FetchFilmCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\r\n  );\r\n}\r\n"],"names":["MovieDetailsPage","movieId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetailsPage","then","film","onClick","state","from","pathname","search","className","s","src","poster_path","alt","title","vote_average","release_date","overview","genres","map","name","join","to","BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchHomePage","fetchMoviesPage","FetchFilmCast","fetchReviews"],"sourceRoot":""}